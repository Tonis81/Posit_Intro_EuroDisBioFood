library(datasets)
library(datasets)
data(iris)
summary(iris)
help(iris)
names(iris) <- tolower(names(iris))
library(dplyr)
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
# select() the specified columns
selected <- select(iris, sepal.length, sepal.width, petal.length)
# select all columns from sepal.length to petal.length
selected2 <- select(iris, sepal.length:petal.length)
head(selected, 3)
plot(iris)
# use ?plot to read more about other arguments
plot(iris$sepal.width, iris$sepal.length)
library(ggplot2)
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) + geom_point()
names(iris)
ggplot(iris, aes(x = sepal.Length, y = sepal.Width)) + geom_point()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
library(datasets)
data(iris)
help(iris)
names(iris)
names(iris) <- tolower(names(iris))
names(iris)
ggplot(iris, aes(x = sepal.length, y = sepal.width, colour = Species)) + geom_point()
ggplot(iris, aes(x = sepal.length, y = sepal.width, colour = species)) + geom_point()
ggplot(iris, aes(x = sepal.length, fill = species)) + geom_histogram()
ggplot(iris,
aes(x = species, y = sepal.Length)) +
geom_boxplot()
ggplot(iris,
aes(x = species, y = sepal.length)) +
geom_boxplot()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth(aes(colour = species))
base <- ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
base + facet_wrap(~species)
library(datasets)
data("mtcars")
library(datasets)
data("mtcars")
names(mtcars)
head(metcars)
head(mtcars)
# Compare Petal.Length of these two species
t.test(x = setosa$petal.length, y = versicolor$petal.length)
# Chunk 1
library(datasets)
data(iris)
help(iris)
names(iris)
summary(iris)
# Chunk 2
names(iris) <- tolower(names(iris))
names(iris)
library(dplyr)
# Chunk 3
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
# Chunk 4
sepalLength6 <- filter(iris, species == "virginica", sepal.length > 6)
tail(sepalLength6) # compare this to head()
# Chunk 5
# select() the specified columns
selected <- select(iris, sepal.length, sepal.width, petal.length)
# select all columns from sepal.length to petal.length
selected2 <- select(iris, sepal.length:petal.length)
head(selected, 3)
# Chunk 6
# create a new column that stores logical values for sepal.width greater than half of sepal.length
newCol <- mutate(iris, greater.half = sepal.width > 0.5 * sepal.length)
tail(newCol)
# Chunk 7
plot(iris)
# Chunk 8
# use ?plot to read more about other arguments
plot(iris$sepal.width, iris$sepal.length)
# Chunk 9
# ?hist will give you details on more arguments
hist(iris$sepal.width)
# Chunk 10
library(ggplot2)
names(iris)
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
# Chunk 11
ggplot(iris, aes(x = sepal.length, y = sepal.width, colour = species)) + geom_point()
# Chunk 12
ggplot(iris, aes(x = sepal.length, fill = species)) + geom_histogram()
# Chunk 13
ggplot(iris, aes(x = sepal.length, colour = species)) + geom_density()
# Chunk 14
ggplot(iris,
aes(x = species, y = sepal.length)) +
geom_boxplot()
# Chunk 15
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth()
# Chunk 16
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth(aes(colour = species))
# Chunk 17
base <- ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
base + facet_wrap(~species)
# Compare Petal.Length of these two species
t.test(x = setosa$petal.length, y = versicolor$petal.length)
aov(formula = petal.length ~ species, data = iris)
summary(object = petal.length.aov)
petal.length.aov <- aov(formula = petal.length ~ species, data = iris)
summary(petal.length.aov)
sink(file = "output/petal-length-anova.txt")
summary(object = petal.length.aov)
sink()
dt <- write.csv(iris, file = "dt")
dt <- write.csv(iris, file = "dt.csv")
dt <- write.csv(iris, file = "/Users/tonisignes/Desktop/Drive UMH/1. PROJECTS/PR344_Nitra_Slovakia_Scientific_Articles/2. Slides/dt.csv")
dt <- read.csv("data", "iris.csv")
library(here)
dt <- read.csv("data", "iris.csv")
dt <- read.csv(here("data", "iris.csv"))
dt <- read.csv(here("data", "iris.csv"))
rm(list=ls())
library(here)
dt <- read.csv(here("data", "iris.csv"))
dt <- read.csv(here("data", "iris.csv"))
dt <- read.csv(here("data", "iris.csv"))
names(dt)
dt <- read.csv(here("data", "iris.csv"), fileEncoding="UTF-8-BOM")
names(dt)
dt <- read.csv(here("data", "iris.csv"), fileEncoding="UTF-8-BOM")
names(dt)
dt <- read.csv(here("data", "iris.csv"), encoding="utf-8")
names(dt)
head(dt)
2+2
5-3
4+3*(7/3)
4+2*(10/2)
sqrt(9)
data(iris)
help(iris)
a <- c(2, 3, 4)
2*a
names(iris)
dim(iris)
summary(iris)
dt <- read.csv(here("data", "iris.csv"))
names(iris)
dim(iris)
head(iris)
summary(iris)
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
# Chunk 1
2+2
5-3
4+2*(10/2)
sqrt(9)
a <- c(2, 3, 4)
2*a
# Chunk 2
rm(list=ls())
library(here) #set directory
library(datasets) #build in datasets
library(tidyverse) #The tidyverse is an opinionated collection of R packages designed for data science
# Chunk 3
data(iris)
help(iris)
names(iris) <- tolower(names(iris)) #This is to use lowercase names.
names(iris)
dim(iris)
head(iris)
summary(iris)
# Chunk 4
dt <- read.csv(here("data", "iris.csv"))
names(iris)
dim(iris)
head(iris)
summary(iris)
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
table(iris$species)
str(iris)
table(iris$species)
# Chunk 1
2+2
5-3
4+2*(10/2)
sqrt(9)
a <- c(2, 3, 4)
2*a
# Chunk 2
rm(list=ls())
library(here) #set directory
library(datasets) #build in datasets
library(tidyverse) #The tidyverse is an opinionated collection of R packages designed for data science
# Chunk 3
data(iris)
help(iris)
names(iris) <- tolower(names(iris)) #This is to use lowercase names.
names(iris)
dim(iris)
head(iris)
summary(iris)
str(iris)
table(iris$species)
# Chunk 4
dt <- read.csv(here("data", "iris.csv"))
names(iris)
dim(iris)
head(iris)
summary(iris)
str(iris)
table(iris$species)
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
dim(virginica)
sepalLength6 <- filter(iris, species == "virginica", sepal.length > 6)
tail(sepalLength6) # compare this to head()
dim(sepalLength6)
# select() the specified columns
selected <- iris %>% select( sepal.length, sepal.width, petal.length)
head(selected, 3)
head(selected)
head(selected, 3)
# select all columns from sepal.length to petal.length
selected2 <- iris %>% select(sepal.length:petal.length)
head(selected2, 3)
# create a new column that stores logical values for sepal.width greater than half of sepal.length
newCol <- iris %>% mutate(greater.half = sepal.width > 0.5 * sepal.length)
tail(newCol)
newCol
iris$half_sepal_length <- 0.5 * iris$sepal.length
tail(newCol)
# create a new column that stores logical values for sepal.width greater than half of sepal.length
newCol <- iris %>% mutate(greater.half = sepal.width > 0.5 * sepal.length)
newCol$half_sepal_length <- 0.5 * newCol$sepal.length
tail(newCol)
plot(iris)
# use ?plot to read more about other arguments
plot(iris$sepal.width, iris$sepal.length)
plot(iris$sepal.width, iris$sepal.length)
help("plot")
help(plot)
?plot
# ?hist will give you details on more arguments
hist(iris$sepal.width)
# library(ggplot2)
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
ggplot(iris, aes(x = sepal.length, y = sepal.width, colour = species)) + geom_point()
ggplot(iris, aes(x = sepal.length, fill = species)) + geom_histogram()
ggplot(iris, aes(x = sepal.length, colour = species)) + geom_density()
ggplot(iris, aes(x = sepal.length, fill = species)) + geom_histogram()
ggplot(iris, aes(x = sepal.length, colour = species)) + geom_density()
ggplot(iris,
aes(x = species, y = sepal.length)) +
geom_boxplot()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth(aes(colour = species))
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth(aes(colour = species))
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth()
ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point() + geom_smooth(aes(colour = species))
base <- ggplot(iris, aes(x = sepal.length, y = sepal.width)) + geom_point()
base + facet_wrap(~species)
petal.length.aov <- aov(formula = petal.length ~ species, data = iris)
summary(petal.length.aov)
